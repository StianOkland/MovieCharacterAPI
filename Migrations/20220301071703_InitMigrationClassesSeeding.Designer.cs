// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieChatacterAPI.Models;

namespace MovieChatacterAPI.Migrations
{
    [DbContext(typeof(MovieCharacterDbContext))]
    [Migration("20220301071703_InitMigrationClassesSeeding")]
    partial class InitMigrationClassesSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MovieCharacter", b =>
                {
                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("CharacterId")
                        .HasColumnType("int");

                    b.HasKey("MovieId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("MovieCharacter");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CharacterId = 1
                        },
                        new
                        {
                            MovieId = 2,
                            CharacterId = 2
                        });
                });

            modelBuilder.Entity("MovieChatacterAPI.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Frodo",
                            FullName = "Elijah Wood",
                            Gender = "Male",
                            Picture = "https://imdb.to/3sppziu"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Hermoine",
                            FullName = "Emma Watson",
                            Gender = "Female",
                            Picture = "https://imdb.to/344JN7W"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "Cpt. America",
                            FullName = "Chris Evans",
                            Gender = "Male",
                            Picture = "https://imdb.to/36EbkheW"
                        });
                });

            modelBuilder.Entity("MovieChatacterAPI.Models.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Destroy the ring",
                            Name = "Lord of the Rings"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Defear Voldermort",
                            Name = "Harry Potter"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Superheroes",
                            Name = "Marvel"
                        });
                });

            modelBuilder.Entity("MovieChatacterAPI.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MovieTitle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Peter Jackson",
                            FranchiseId = 1,
                            Genre = "Fantasy",
                            MovieTitle = "The Fellowship of the ring",
                            Picture = "https://imdb.to/3hrm05a",
                            ReleaseYear = 2001,
                            Trailer = "https://imdb.to/3K7qL01"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Alfonso Cuaron",
                            FranchiseId = 2,
                            Genre = "Fantasy",
                            MovieTitle = "The Prisoner of Azkaban",
                            Picture = "https://imdb.to/3vmnzcN",
                            ReleaseYear = 2004,
                            Trailer = "https://imdb.to/3srrcfn"
                        },
                        new
                        {
                            Id = 3,
                            Director = "Joss Whedon",
                            FranchiseId = 3,
                            Genre = "Fantasy",
                            MovieTitle = "The Avengers",
                            Picture = "https://imdb.to/3tdEV96",
                            ReleaseYear = 2012,
                            Trailer = "https://imdb.to/3BXO21A"
                        });
                });

            modelBuilder.Entity("MovieCharacter", b =>
                {
                    b.HasOne("MovieChatacterAPI.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieChatacterAPI.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieChatacterAPI.Models.Movie", b =>
                {
                    b.HasOne("MovieChatacterAPI.Models.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MovieChatacterAPI.Models.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
